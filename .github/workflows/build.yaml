name: Build App APK

env:
  # The name of the main module repository
  main_project_module: app


on:
  workflow_dispatch:

  push:
    branches:
      - main

  pull_request:
    types:
      - closed

#  release:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: gradle

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Create local.properties and set API key
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties

      - name: Access PLACES_API_KEY
        env:
          PLACES_API_KEY: ${{ secrets.PLACES_API_KEY }}
          MAPS_API_KEY: $ {{ secrets.PLACES_API_KEY }}
        run: echo PLACES_API_KEY=\"$PLACES_API_KEY\" > ./local.properties

      - name: Build APK
        run: |
          ./gradlew build assemble
          ls -R ${{ env.main_project_module }}/build/outputs/apk/

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: ${{ env.main_project_module }}/build/outputs/apk/release/
          signingKeyBase64: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
        env:
          # override default build-tools version (33.0.0) -- optional
          BUILD_TOOLS_VERSION: "34.0.0"

      # Example use of `signedReleaseFile` output -- not needed
      - uses: actions/upload-artifact@v4
        with:
          name: Signed app bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}


      # Save time to environment variable
      - name: Set current date and time as environment variables
        run: echo "date_time=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      # Create Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: AppRelease-${{ env.date_time }}
          release_name: App Release - ${{ env.date_time }}
          draft: false
          prerelease: false

      # Upload APK to Release
      - name: Upload APK to Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{steps.sign_app.outputs.signedReleaseFile}}
          asset_name: Voyageur.apk
          asset_content_type: application/zip